I0107 03:31:55.998409  5306 caffe.cpp:210] Use CPU.
I0107 03:31:56.026798  5306 solver.cpp:48] Initializing solver from parameters: 
test_iter: 1000
test_interval: 1000
base_lr: 0.001
display: 50
max_iter: 40000
lr_policy: "step"
gamma: 0.1
momentum: 0.9
weight_decay: 0.0005
stepsize: 2500
snapshot: 5000
snapshot_prefix: "/home/mohit/Cat-Dog-Classification-Kaggle/model_definition/caffe_model"
solver_mode: CPU
net: "/home/mohit/Cat-Dog-Classification-Kaggle/model_definition/caffenet_train_val_1.prototxt"
train_state {
  level: 0
  stage: ""
}
I0107 03:31:56.028074  5306 solver.cpp:91] Creating training net from net file: /home/mohit/Cat-Dog-Classification-Kaggle/model_definition/caffenet_train_val_1.prototxt
I0107 03:31:56.029484  5306 net.cpp:322] The NetState phase (0) differed from the phase (1) specified by a rule in layer data
I0107 03:31:56.029567  5306 net.cpp:322] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0107 03:31:56.029789  5306 net.cpp:58] Initializing net from parameters: 
name: "CaffeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "data"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    mirror: true
    crop_size: 227
    mean_file: "/home/mohit/Cat-Dog-Classification-Kaggle/input/mean.binaryproto"
  }
  data_param {
    source: "/home/mohit/Cat-Dog-Classification-Kaggle/input/train_lmdb"
    batch_size: 256
    backend: LMDB
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "data"
  top: "conv1"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 96
    kernel_size: 11
    stride: 4
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "conv1"
  top: "conv1"
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 2
  }
}
layer {
  name: "norm1"
  type: "LRN"
  bottom: "pool1"
  top: "norm1"
  lrn_param {
    local_size: 5
    alpha: 0.0001
    beta: 0.75
  }
}
layer {
  name: "conv2"
  type: "Convolution"
  bottom: "norm1"
  top: "conv2"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 256
    pad: 2
    kernel_size: 5
    group: 2
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "conv2"
  top: "conv2"
}
layer {
  name: "pool2"
  type: "Pooling"
  bottom: "conv2"
  top: "pool2"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 2
  }
}
layer {
  name: "norm2"
  type: "LRN"
  bottom: "pool2"
  top: "norm2"
  lrn_param {
    local_size: 5
    alpha: 0.0001
    beta: 0.75
  }
}
layer {
  name: "conv3"
  type: "Convolution"
  bottom: "norm2"
  top: "conv3"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 384
    pad: 1
    kernel_size: 3
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "conv3"
  top: "conv3"
}
layer {
  name: "conv4"
  type: "Convolution"
  bottom: "conv3"
  top: "conv4"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 384
    pad: 1
    kernel_size: 3
    group: 2
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  name: "relu4"
  type: "ReLU"
  bottom: "conv4"
  top: "conv4"
}
layer {
  name: "conv5"
  type: "Convolution"
  bottom: "conv4"
  top: "conv5"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 3
    group: 2
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  name: "relu5"
  type: "ReLU"
  bottom: "conv5"
  top: "conv5"
}
layer {
  name: "pool5"
  type: "Pooling"
  bottom: "conv5"
  top: "pool5"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 2
  }
}
layer {
  name: "fc6"
  type: "InnerProduct"
  bottom: "pool5"
  top: "fc6"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 4096
    weight_filler {
      type: "gaussian"
      std: 0.005
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  name: "relu6"
  type: "ReLU"
  bottom: "fc6"
  top: "fc6"
}
layer {
  name: "drop6"
  type: "Dropout"
  bottom: "fc6"
  top: "fc6"
  dropout_param {
    dropout_ratio: 0.5
  }
}
layer {
  name: "fc7"
  type: "InnerProduct"
  bottom: "fc6"
  top: "fc7"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 4096
    weight_filler {
      type: "gaussian"
      std: 0.005
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  name: "relu7"
  type: "ReLU"
  bottom: "fc7"
  top: "fc7"
}
layer {
  name: "drop7"
  type: "Dropout"
  bottom: "fc7"
  top: "fc7"
  dropout_param {
    dropout_ratio: 0.5
  }
}
layer {
  name: "fc8"
  type: "InnerProduct"
  bottom: "fc7"
  top: "fc8"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 2
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "fc8"
  bottom: "label"
  top: "loss"
}
I0107 03:31:56.029994  5306 layer_factory.hpp:77] Creating layer data
I0107 03:31:56.053658  5306 net.cpp:100] Creating Layer data
I0107 03:31:56.053697  5306 net.cpp:408] data -> data
I0107 03:31:56.053794  5310 db_lmdb.cpp:35] Opened lmdb /home/mohit/Cat-Dog-Classification-Kaggle/input/train_lmdb
I0107 03:31:56.054117  5306 net.cpp:408] data -> label
I0107 03:31:56.054152  5306 data_transformer.cpp:25] Loading mean file from: /home/mohit/Cat-Dog-Classification-Kaggle/input/mean.binaryproto
I0107 03:31:56.084157  5306 data_layer.cpp:41] output data size: 256,3,227,227
I0107 03:31:56.222455  5306 net.cpp:150] Setting up data
I0107 03:31:56.222501  5306 net.cpp:157] Top shape: 256 3 227 227 (39574272)
I0107 03:31:56.222513  5306 net.cpp:157] Top shape: 256 (256)
I0107 03:31:56.222533  5306 net.cpp:165] Memory required for data: 158298112
I0107 03:31:56.222550  5306 layer_factory.hpp:77] Creating layer conv1
I0107 03:31:56.222611  5306 net.cpp:100] Creating Layer conv1
I0107 03:31:56.222651  5306 net.cpp:434] conv1 <- data
I0107 03:31:56.222703  5306 net.cpp:408] conv1 -> conv1
I0107 03:31:56.223932  5306 net.cpp:150] Setting up conv1
I0107 03:31:56.223948  5306 net.cpp:157] Top shape: 256 96 55 55 (74342400)
I0107 03:31:56.223953  5306 net.cpp:165] Memory required for data: 455667712
I0107 03:31:56.223978  5306 layer_factory.hpp:77] Creating layer relu1
I0107 03:31:56.223990  5306 net.cpp:100] Creating Layer relu1
I0107 03:31:56.224000  5306 net.cpp:434] relu1 <- conv1
I0107 03:31:56.224011  5306 net.cpp:395] relu1 -> conv1 (in-place)
I0107 03:31:56.224225  5306 net.cpp:150] Setting up relu1
I0107 03:31:56.224241  5306 net.cpp:157] Top shape: 256 96 55 55 (74342400)
I0107 03:31:56.224247  5306 net.cpp:165] Memory required for data: 753037312
I0107 03:31:56.224253  5306 layer_factory.hpp:77] Creating layer pool1
I0107 03:31:56.224265  5306 net.cpp:100] Creating Layer pool1
I0107 03:31:56.224272  5306 net.cpp:434] pool1 <- conv1
I0107 03:31:56.224299  5306 net.cpp:408] pool1 -> pool1
I0107 03:31:56.224330  5306 net.cpp:150] Setting up pool1
I0107 03:31:56.224340  5306 net.cpp:157] Top shape: 256 96 27 27 (17915904)
I0107 03:31:56.224346  5306 net.cpp:165] Memory required for data: 824700928
I0107 03:31:56.224370  5306 layer_factory.hpp:77] Creating layer norm1
I0107 03:31:56.224385  5306 net.cpp:100] Creating Layer norm1
I0107 03:31:56.224391  5306 net.cpp:434] norm1 <- pool1
I0107 03:31:56.224403  5306 net.cpp:408] norm1 -> norm1
I0107 03:31:56.228505  5306 net.cpp:150] Setting up norm1
I0107 03:31:56.228529  5306 net.cpp:157] Top shape: 256 96 27 27 (17915904)
I0107 03:31:56.228538  5306 net.cpp:165] Memory required for data: 896364544
I0107 03:31:56.228548  5306 layer_factory.hpp:77] Creating layer conv2
I0107 03:31:56.228571  5306 net.cpp:100] Creating Layer conv2
I0107 03:31:56.228580  5306 net.cpp:434] conv2 <- norm1
I0107 03:31:56.228595  5306 net.cpp:408] conv2 -> conv2
I0107 03:31:56.239462  5306 net.cpp:150] Setting up conv2
I0107 03:31:56.239495  5306 net.cpp:157] Top shape: 256 256 27 27 (47775744)
I0107 03:31:56.239504  5306 net.cpp:165] Memory required for data: 1087467520
I0107 03:31:56.239526  5306 layer_factory.hpp:77] Creating layer relu2
I0107 03:31:56.239543  5306 net.cpp:100] Creating Layer relu2
I0107 03:31:56.239552  5306 net.cpp:434] relu2 <- conv2
I0107 03:31:56.239562  5306 net.cpp:395] relu2 -> conv2 (in-place)
I0107 03:31:56.239578  5306 net.cpp:150] Setting up relu2
I0107 03:31:56.239586  5306 net.cpp:157] Top shape: 256 256 27 27 (47775744)
I0107 03:31:56.239593  5306 net.cpp:165] Memory required for data: 1278570496
I0107 03:31:56.239598  5306 layer_factory.hpp:77] Creating layer pool2
I0107 03:31:56.239611  5306 net.cpp:100] Creating Layer pool2
I0107 03:31:56.239617  5306 net.cpp:434] pool2 <- conv2
I0107 03:31:56.239626  5306 net.cpp:408] pool2 -> pool2
I0107 03:31:56.239641  5306 net.cpp:150] Setting up pool2
I0107 03:31:56.239652  5306 net.cpp:157] Top shape: 256 256 13 13 (11075584)
I0107 03:31:56.239657  5306 net.cpp:165] Memory required for data: 1322872832
I0107 03:31:56.239665  5306 layer_factory.hpp:77] Creating layer norm2
I0107 03:31:56.239680  5306 net.cpp:100] Creating Layer norm2
I0107 03:31:56.239686  5306 net.cpp:434] norm2 <- pool2
I0107 03:31:56.239694  5306 net.cpp:408] norm2 -> norm2
I0107 03:31:56.239708  5306 net.cpp:150] Setting up norm2
I0107 03:31:56.239717  5306 net.cpp:157] Top shape: 256 256 13 13 (11075584)
I0107 03:31:56.239723  5306 net.cpp:165] Memory required for data: 1367175168
I0107 03:31:56.239728  5306 layer_factory.hpp:77] Creating layer conv3
I0107 03:31:56.239745  5306 net.cpp:100] Creating Layer conv3
I0107 03:31:56.239751  5306 net.cpp:434] conv3 <- norm2
I0107 03:31:56.239761  5306 net.cpp:408] conv3 -> conv3
I0107 03:31:56.269340  5311 blocking_queue.cpp:50] Waiting for data
I0107 03:31:56.271024  5306 net.cpp:150] Setting up conv3
I0107 03:31:56.271056  5306 net.cpp:157] Top shape: 256 384 13 13 (16613376)
I0107 03:31:56.271062  5306 net.cpp:165] Memory required for data: 1433628672
I0107 03:31:56.271075  5306 layer_factory.hpp:77] Creating layer relu3
I0107 03:31:56.271090  5306 net.cpp:100] Creating Layer relu3
I0107 03:31:56.271100  5306 net.cpp:434] relu3 <- conv3
I0107 03:31:56.271111  5306 net.cpp:395] relu3 -> conv3 (in-place)
I0107 03:31:56.271126  5306 net.cpp:150] Setting up relu3
I0107 03:31:56.271139  5306 net.cpp:157] Top shape: 256 384 13 13 (16613376)
I0107 03:31:56.271147  5306 net.cpp:165] Memory required for data: 1500082176
I0107 03:31:56.271153  5306 layer_factory.hpp:77] Creating layer conv4
I0107 03:31:56.271172  5306 net.cpp:100] Creating Layer conv4
I0107 03:31:56.271181  5306 net.cpp:434] conv4 <- conv3
I0107 03:31:56.271193  5306 net.cpp:408] conv4 -> conv4
I0107 03:31:56.292019  5306 net.cpp:150] Setting up conv4
I0107 03:31:56.292047  5306 net.cpp:157] Top shape: 256 384 13 13 (16613376)
I0107 03:31:56.292053  5306 net.cpp:165] Memory required for data: 1566535680
I0107 03:31:56.292078  5306 layer_factory.hpp:77] Creating layer relu4
I0107 03:31:56.292098  5306 net.cpp:100] Creating Layer relu4
I0107 03:31:56.292105  5306 net.cpp:434] relu4 <- conv4
I0107 03:31:56.292116  5306 net.cpp:395] relu4 -> conv4 (in-place)
I0107 03:31:56.292130  5306 net.cpp:150] Setting up relu4
I0107 03:31:56.292140  5306 net.cpp:157] Top shape: 256 384 13 13 (16613376)
I0107 03:31:56.292166  5306 net.cpp:165] Memory required for data: 1632989184
I0107 03:31:56.292174  5306 layer_factory.hpp:77] Creating layer conv5
I0107 03:31:56.292191  5306 net.cpp:100] Creating Layer conv5
I0107 03:31:56.292198  5306 net.cpp:434] conv5 <- conv4
I0107 03:31:56.292212  5306 net.cpp:408] conv5 -> conv5
I0107 03:31:56.305716  5306 net.cpp:150] Setting up conv5
I0107 03:31:56.305742  5306 net.cpp:157] Top shape: 256 256 13 13 (11075584)
I0107 03:31:56.305748  5306 net.cpp:165] Memory required for data: 1677291520
I0107 03:31:56.305779  5306 layer_factory.hpp:77] Creating layer relu5
I0107 03:31:56.305794  5306 net.cpp:100] Creating Layer relu5
I0107 03:31:56.305804  5306 net.cpp:434] relu5 <- conv5
I0107 03:31:56.305814  5306 net.cpp:395] relu5 -> conv5 (in-place)
I0107 03:31:56.305827  5306 net.cpp:150] Setting up relu5
I0107 03:31:56.305837  5306 net.cpp:157] Top shape: 256 256 13 13 (11075584)
I0107 03:31:56.305845  5306 net.cpp:165] Memory required for data: 1721593856
I0107 03:31:56.305851  5306 layer_factory.hpp:77] Creating layer pool5
I0107 03:31:56.305862  5306 net.cpp:100] Creating Layer pool5
I0107 03:31:56.305869  5306 net.cpp:434] pool5 <- conv5
I0107 03:31:56.305881  5306 net.cpp:408] pool5 -> pool5
I0107 03:31:56.305896  5306 net.cpp:150] Setting up pool5
I0107 03:31:56.305908  5306 net.cpp:157] Top shape: 256 256 6 6 (2359296)
I0107 03:31:56.305915  5306 net.cpp:165] Memory required for data: 1731031040
I0107 03:31:56.305922  5306 layer_factory.hpp:77] Creating layer fc6
I0107 03:31:56.305938  5306 net.cpp:100] Creating Layer fc6
I0107 03:31:56.305948  5306 net.cpp:434] fc6 <- pool5
I0107 03:31:56.305959  5306 net.cpp:408] fc6 -> fc6
I0107 03:31:57.468961  5306 net.cpp:150] Setting up fc6
I0107 03:31:57.468986  5306 net.cpp:157] Top shape: 256 4096 (1048576)
I0107 03:31:57.468992  5306 net.cpp:165] Memory required for data: 1735225344
I0107 03:31:57.469015  5306 layer_factory.hpp:77] Creating layer relu6
I0107 03:31:57.469029  5306 net.cpp:100] Creating Layer relu6
I0107 03:31:57.469036  5306 net.cpp:434] relu6 <- fc6
I0107 03:31:57.469048  5306 net.cpp:395] relu6 -> fc6 (in-place)
I0107 03:31:57.469061  5306 net.cpp:150] Setting up relu6
I0107 03:31:57.469070  5306 net.cpp:157] Top shape: 256 4096 (1048576)
I0107 03:31:57.469076  5306 net.cpp:165] Memory required for data: 1739419648
I0107 03:31:57.469084  5306 layer_factory.hpp:77] Creating layer drop6
I0107 03:31:57.469099  5306 net.cpp:100] Creating Layer drop6
I0107 03:31:57.469110  5306 net.cpp:434] drop6 <- fc6
I0107 03:31:57.469120  5306 net.cpp:395] drop6 -> fc6 (in-place)
I0107 03:31:57.469137  5306 net.cpp:150] Setting up drop6
I0107 03:31:57.469147  5306 net.cpp:157] Top shape: 256 4096 (1048576)
I0107 03:31:57.469154  5306 net.cpp:165] Memory required for data: 1743613952
I0107 03:31:57.469161  5306 layer_factory.hpp:77] Creating layer fc7
I0107 03:31:57.469172  5306 net.cpp:100] Creating Layer fc7
I0107 03:31:57.469179  5306 net.cpp:434] fc7 <- fc6
I0107 03:31:57.469188  5306 net.cpp:408] fc7 -> fc7
I0107 03:31:57.999693  5306 net.cpp:150] Setting up fc7
I0107 03:31:57.999719  5306 net.cpp:157] Top shape: 256 4096 (1048576)
I0107 03:31:57.999724  5306 net.cpp:165] Memory required for data: 1747808256
I0107 03:31:57.999748  5306 layer_factory.hpp:77] Creating layer relu7
I0107 03:31:57.999761  5306 net.cpp:100] Creating Layer relu7
I0107 03:31:57.999769  5306 net.cpp:434] relu7 <- fc7
I0107 03:31:57.999781  5306 net.cpp:395] relu7 -> fc7 (in-place)
I0107 03:31:57.999795  5306 net.cpp:150] Setting up relu7
I0107 03:31:57.999804  5306 net.cpp:157] Top shape: 256 4096 (1048576)
I0107 03:31:57.999810  5306 net.cpp:165] Memory required for data: 1752002560
I0107 03:31:57.999816  5306 layer_factory.hpp:77] Creating layer drop7
I0107 03:31:57.999827  5306 net.cpp:100] Creating Layer drop7
I0107 03:31:57.999833  5306 net.cpp:434] drop7 <- fc7
I0107 03:31:57.999841  5306 net.cpp:395] drop7 -> fc7 (in-place)
I0107 03:31:57.999852  5306 net.cpp:150] Setting up drop7
I0107 03:31:57.999861  5306 net.cpp:157] Top shape: 256 4096 (1048576)
I0107 03:31:57.999881  5306 net.cpp:165] Memory required for data: 1756196864
I0107 03:31:57.999888  5306 layer_factory.hpp:77] Creating layer fc8
I0107 03:31:57.999902  5306 net.cpp:100] Creating Layer fc8
I0107 03:31:57.999908  5306 net.cpp:434] fc8 <- fc7
I0107 03:31:57.999918  5306 net.cpp:408] fc8 -> fc8
I0107 03:31:58.000325  5306 net.cpp:150] Setting up fc8
I0107 03:31:58.000344  5306 net.cpp:157] Top shape: 256 2 (512)
I0107 03:31:58.000352  5306 net.cpp:165] Memory required for data: 1756198912
I0107 03:31:58.000362  5306 layer_factory.hpp:77] Creating layer loss
I0107 03:31:58.019690  5306 net.cpp:100] Creating Layer loss
I0107 03:31:58.019724  5306 net.cpp:434] loss <- fc8
I0107 03:31:58.019738  5306 net.cpp:434] loss <- label
I0107 03:31:58.019753  5306 net.cpp:408] loss -> loss
I0107 03:31:58.019788  5306 layer_factory.hpp:77] Creating layer loss
I0107 03:31:58.036110  5306 net.cpp:150] Setting up loss
I0107 03:31:58.036150  5306 net.cpp:157] Top shape: (1)
I0107 03:31:58.036161  5306 net.cpp:160]     with loss weight 1
I0107 03:31:58.036196  5306 net.cpp:165] Memory required for data: 1756198916
I0107 03:31:58.036209  5306 net.cpp:226] loss needs backward computation.
I0107 03:31:58.036221  5306 net.cpp:226] fc8 needs backward computation.
I0107 03:31:58.036231  5306 net.cpp:226] drop7 needs backward computation.
I0107 03:31:58.036240  5306 net.cpp:226] relu7 needs backward computation.
I0107 03:31:58.036248  5306 net.cpp:226] fc7 needs backward computation.
I0107 03:31:58.036257  5306 net.cpp:226] drop6 needs backward computation.
I0107 03:31:58.036265  5306 net.cpp:226] relu6 needs backward computation.
I0107 03:31:58.036273  5306 net.cpp:226] fc6 needs backward computation.
I0107 03:31:58.036298  5306 net.cpp:226] pool5 needs backward computation.
I0107 03:31:58.036310  5306 net.cpp:226] relu5 needs backward computation.
I0107 03:31:58.036319  5306 net.cpp:226] conv5 needs backward computation.
I0107 03:31:58.036327  5306 net.cpp:226] relu4 needs backward computation.
I0107 03:31:58.036335  5306 net.cpp:226] conv4 needs backward computation.
I0107 03:31:58.036345  5306 net.cpp:226] relu3 needs backward computation.
I0107 03:31:58.036352  5306 net.cpp:226] conv3 needs backward computation.
I0107 03:31:58.036361  5306 net.cpp:226] norm2 needs backward computation.
I0107 03:31:58.036370  5306 net.cpp:226] pool2 needs backward computation.
I0107 03:31:58.036378  5306 net.cpp:226] relu2 needs backward computation.
I0107 03:31:58.036386  5306 net.cpp:226] conv2 needs backward computation.
I0107 03:31:58.036393  5306 net.cpp:226] norm1 needs backward computation.
I0107 03:31:58.036402  5306 net.cpp:226] pool1 needs backward computation.
I0107 03:31:58.036411  5306 net.cpp:226] relu1 needs backward computation.
I0107 03:31:58.036418  5306 net.cpp:226] conv1 needs backward computation.
I0107 03:31:58.036428  5306 net.cpp:228] data does not need backward computation.
I0107 03:31:58.036435  5306 net.cpp:270] This network produces output loss
I0107 03:31:58.036474  5306 net.cpp:283] Network initialization done.
I0107 03:31:58.037293  5306 solver.cpp:181] Creating test net (#0) specified by net file: /home/mohit/Cat-Dog-Classification-Kaggle/model_definition/caffenet_train_val_1.prototxt
I0107 03:31:58.037376  5306 net.cpp:322] The NetState phase (1) differed from the phase (0) specified by a rule in layer data
I0107 03:31:58.037622  5306 net.cpp:58] Initializing net from parameters: 
name: "CaffeNet"
state {
  phase: TEST
}
layer {
  name: "data"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    mirror: false
    crop_size: 227
    mean_file: "/home/mohit/Cat-Dog-Classification-Kaggle/input/mean.binaryproto"
  }
  data_param {
    source: "/home/mohit/Cat-Dog-Classification-Kaggle/input/val_lmdb"
    batch_size: 50
    backend: LMDB
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "data"
  top: "conv1"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 96
    kernel_size: 11
    stride: 4
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "conv1"
  top: "conv1"
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 2
  }
}
layer {
  name: "norm1"
  type: "LRN"
  bottom: "pool1"
  top: "norm1"
  lrn_param {
    local_size: 5
    alpha: 0.0001
    beta: 0.75
  }
}
layer {
  name: "conv2"
  type: "Convolution"
  bottom: "norm1"
  top: "conv2"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 256
    pad: 2
    kernel_size: 5
    group: 2
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "conv2"
  top: "conv2"
}
layer {
  name: "pool2"
  type: "Pooling"
  bottom: "conv2"
  top: "pool2"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 2
  }
}
layer {
  name: "norm2"
  type: "LRN"
  bottom: "pool2"
  top: "norm2"
  lrn_param {
    local_size: 5
    alpha: 0.0001
    beta: 0.75
  }
}
layer {
  name: "conv3"
  type: "Convolution"
  bottom: "norm2"
  top: "conv3"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 384
    pad: 1
    kernel_size: 3
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "conv3"
  top: "conv3"
}
layer {
  name: "conv4"
  type: "Convolution"
  bottom: "conv3"
  top: "conv4"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 384
    pad: 1
    kernel_size: 3
    group: 2
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  name: "relu4"
  type: "ReLU"
  bottom: "conv4"
  top: "conv4"
}
layer {
  name: "conv5"
  type: "Convolution"
  bottom: "conv4"
  top: "conv5"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 3
    group: 2
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  name: "relu5"
  type: "ReLU"
  bottom: "conv5"
  top: "conv5"
}
layer {
  name: "pool5"
  type: "Pooling"
  bottom: "conv5"
  top: "pool5"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 2
  }
}
layer {
  name: "fc6"
  type: "InnerProduct"
  bottom: "pool5"
  top: "fc6"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 4096
    weight_filler {
      type: "gaussian"
      std: 0.005
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  name: "relu6"
  type: "ReLU"
  bottom: "fc6"
  top: "fc6"
}
layer {
  name: "drop6"
  type: "Dropout"
  bottom: "fc6"
  top: "fc6"
  dropout_param {
    dropout_ratio: 0.5
  }
}
layer {
  name: "fc7"
  type: "InnerProduct"
  bottom: "fc6"
  top: "fc7"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 4096
    weight_filler {
      type: "gaussian"
      std: 0.005
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  name: "relu7"
  type: "ReLU"
  bottom: "fc7"
  top: "fc7"
}
layer {
  name: "drop7"
  type: "Dropout"
  bottom: "fc7"
  top: "fc7"
  dropout_param {
    dropout_ratio: 0.5
  }
}
layer {
  name: "fc8"
  type: "InnerProduct"
  bottom: "fc7"
  top: "fc8"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 2
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "fc8"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "fc8"
  bottom: "label"
  top: "loss"
}
I0107 03:31:58.037866  5306 layer_factory.hpp:77] Creating layer data
I0107 03:31:58.037979  5306 net.cpp:100] Creating Layer data
I0107 03:31:58.038008  5306 net.cpp:408] data -> data
I0107 03:31:58.038024  5306 net.cpp:408] data -> label
I0107 03:31:58.038038  5306 data_transformer.cpp:25] Loading mean file from: /home/mohit/Cat-Dog-Classification-Kaggle/input/mean.binaryproto
I0107 03:31:58.077837  5314 db_lmdb.cpp:35] Opened lmdb /home/mohit/Cat-Dog-Classification-Kaggle/input/val_lmdb
I0107 03:31:58.162659  5306 data_layer.cpp:41] output data size: 50,3,227,227
I0107 03:31:58.213722  5306 net.cpp:150] Setting up data
I0107 03:31:58.213760  5306 net.cpp:157] Top shape: 50 3 227 227 (7729350)
I0107 03:31:58.213775  5306 net.cpp:157] Top shape: 50 (50)
I0107 03:31:58.213913  5306 net.cpp:165] Memory required for data: 30917600
I0107 03:31:58.213925  5306 layer_factory.hpp:77] Creating layer label_data_1_split
I0107 03:31:58.213945  5306 net.cpp:100] Creating Layer label_data_1_split
I0107 03:31:58.213958  5306 net.cpp:434] label_data_1_split <- label
I0107 03:31:58.213969  5306 net.cpp:408] label_data_1_split -> label_data_1_split_0
I0107 03:31:58.213985  5306 net.cpp:408] label_data_1_split -> label_data_1_split_1
I0107 03:31:58.214005  5306 net.cpp:150] Setting up label_data_1_split
I0107 03:31:58.214017  5306 net.cpp:157] Top shape: 50 (50)
I0107 03:31:58.214025  5306 net.cpp:157] Top shape: 50 (50)
I0107 03:31:58.214031  5306 net.cpp:165] Memory required for data: 30918000
I0107 03:31:58.214038  5306 layer_factory.hpp:77] Creating layer conv1
I0107 03:31:58.214056  5306 net.cpp:100] Creating Layer conv1
I0107 03:31:58.214066  5306 net.cpp:434] conv1 <- data
I0107 03:31:58.214076  5306 net.cpp:408] conv1 -> conv1
I0107 03:31:58.215221  5306 net.cpp:150] Setting up conv1
I0107 03:31:58.215234  5306 net.cpp:157] Top shape: 50 96 55 55 (14520000)
I0107 03:31:58.215241  5306 net.cpp:165] Memory required for data: 88998000
I0107 03:31:58.215258  5306 layer_factory.hpp:77] Creating layer relu1
I0107 03:31:58.215270  5306 net.cpp:100] Creating Layer relu1
I0107 03:31:58.215281  5306 net.cpp:434] relu1 <- conv1
I0107 03:31:58.215289  5306 net.cpp:395] relu1 -> conv1 (in-place)
I0107 03:31:58.215301  5306 net.cpp:150] Setting up relu1
I0107 03:31:58.215309  5306 net.cpp:157] Top shape: 50 96 55 55 (14520000)
I0107 03:31:58.215315  5306 net.cpp:165] Memory required for data: 147078000
I0107 03:31:58.215322  5306 layer_factory.hpp:77] Creating layer pool1
I0107 03:31:58.215333  5306 net.cpp:100] Creating Layer pool1
I0107 03:31:58.215339  5306 net.cpp:434] pool1 <- conv1
I0107 03:31:58.215348  5306 net.cpp:408] pool1 -> pool1
I0107 03:31:58.215363  5306 net.cpp:150] Setting up pool1
I0107 03:31:58.215371  5306 net.cpp:157] Top shape: 50 96 27 27 (3499200)
I0107 03:31:58.215378  5306 net.cpp:165] Memory required for data: 161074800
I0107 03:31:58.215384  5306 layer_factory.hpp:77] Creating layer norm1
I0107 03:31:58.215395  5306 net.cpp:100] Creating Layer norm1
I0107 03:31:58.215401  5306 net.cpp:434] norm1 <- pool1
I0107 03:31:58.215409  5306 net.cpp:408] norm1 -> norm1
I0107 03:31:58.215421  5306 net.cpp:150] Setting up norm1
I0107 03:31:58.215430  5306 net.cpp:157] Top shape: 50 96 27 27 (3499200)
I0107 03:31:58.215436  5306 net.cpp:165] Memory required for data: 175071600
I0107 03:31:58.215442  5306 layer_factory.hpp:77] Creating layer conv2
I0107 03:31:58.215456  5306 net.cpp:100] Creating Layer conv2
I0107 03:31:58.215462  5306 net.cpp:434] conv2 <- norm1
I0107 03:31:58.215471  5306 net.cpp:408] conv2 -> conv2
I0107 03:31:58.225544  5306 net.cpp:150] Setting up conv2
I0107 03:31:58.225574  5306 net.cpp:157] Top shape: 50 256 27 27 (9331200)
I0107 03:31:58.225620  5306 net.cpp:165] Memory required for data: 212396400
I0107 03:31:58.225643  5306 layer_factory.hpp:77] Creating layer relu2
I0107 03:31:58.225672  5306 net.cpp:100] Creating Layer relu2
I0107 03:31:58.225692  5306 net.cpp:434] relu2 <- conv2
I0107 03:31:58.225703  5306 net.cpp:395] relu2 -> conv2 (in-place)
I0107 03:31:58.225718  5306 net.cpp:150] Setting up relu2
I0107 03:31:58.225728  5306 net.cpp:157] Top shape: 50 256 27 27 (9331200)
I0107 03:31:58.225734  5306 net.cpp:165] Memory required for data: 249721200
I0107 03:31:58.225740  5306 layer_factory.hpp:77] Creating layer pool2
I0107 03:31:58.225754  5306 net.cpp:100] Creating Layer pool2
I0107 03:31:58.225761  5306 net.cpp:434] pool2 <- conv2
I0107 03:31:58.225775  5306 net.cpp:408] pool2 -> pool2
I0107 03:31:58.225793  5306 net.cpp:150] Setting up pool2
I0107 03:31:58.225806  5306 net.cpp:157] Top shape: 50 256 13 13 (2163200)
I0107 03:31:58.225813  5306 net.cpp:165] Memory required for data: 258374000
I0107 03:31:58.225819  5306 layer_factory.hpp:77] Creating layer norm2
I0107 03:31:58.225833  5306 net.cpp:100] Creating Layer norm2
I0107 03:31:58.225841  5306 net.cpp:434] norm2 <- pool2
I0107 03:31:58.225849  5306 net.cpp:408] norm2 -> norm2
I0107 03:31:58.225862  5306 net.cpp:150] Setting up norm2
I0107 03:31:58.225877  5306 net.cpp:157] Top shape: 50 256 13 13 (2163200)
I0107 03:31:58.225883  5306 net.cpp:165] Memory required for data: 267026800
I0107 03:31:58.225889  5306 layer_factory.hpp:77] Creating layer conv3
I0107 03:31:58.225908  5306 net.cpp:100] Creating Layer conv3
I0107 03:31:58.225916  5306 net.cpp:434] conv3 <- norm2
I0107 03:31:58.225926  5306 net.cpp:408] conv3 -> conv3
I0107 03:31:58.251899  5306 net.cpp:150] Setting up conv3
I0107 03:31:58.251929  5306 net.cpp:157] Top shape: 50 384 13 13 (3244800)
I0107 03:31:58.251937  5306 net.cpp:165] Memory required for data: 280006000
I0107 03:31:58.251958  5306 layer_factory.hpp:77] Creating layer relu3
I0107 03:31:58.251973  5306 net.cpp:100] Creating Layer relu3
I0107 03:31:58.251981  5306 net.cpp:434] relu3 <- conv3
I0107 03:31:58.251994  5306 net.cpp:395] relu3 -> conv3 (in-place)
I0107 03:31:58.252009  5306 net.cpp:150] Setting up relu3
I0107 03:31:58.252018  5306 net.cpp:157] Top shape: 50 384 13 13 (3244800)
I0107 03:31:58.252024  5306 net.cpp:165] Memory required for data: 292985200
I0107 03:31:58.252032  5306 layer_factory.hpp:77] Creating layer conv4
I0107 03:31:58.252048  5306 net.cpp:100] Creating Layer conv4
I0107 03:31:58.252055  5306 net.cpp:434] conv4 <- conv3
I0107 03:31:58.252068  5306 net.cpp:408] conv4 -> conv4
I0107 03:31:58.273161  5306 net.cpp:150] Setting up conv4
I0107 03:31:58.273187  5306 net.cpp:157] Top shape: 50 384 13 13 (3244800)
I0107 03:31:58.273195  5306 net.cpp:165] Memory required for data: 305964400
I0107 03:31:58.273221  5306 layer_factory.hpp:77] Creating layer relu4
I0107 03:31:58.273236  5306 net.cpp:100] Creating Layer relu4
I0107 03:31:58.273246  5306 net.cpp:434] relu4 <- conv4
I0107 03:31:58.273255  5306 net.cpp:395] relu4 -> conv4 (in-place)
I0107 03:31:58.273268  5306 net.cpp:150] Setting up relu4
I0107 03:31:58.273278  5306 net.cpp:157] Top shape: 50 384 13 13 (3244800)
I0107 03:31:58.273293  5306 net.cpp:165] Memory required for data: 318943600
I0107 03:31:58.273298  5306 layer_factory.hpp:77] Creating layer conv5
I0107 03:31:58.273327  5306 net.cpp:100] Creating Layer conv5
I0107 03:31:58.273334  5306 net.cpp:434] conv5 <- conv4
I0107 03:31:58.273344  5306 net.cpp:408] conv5 -> conv5
I0107 03:31:58.286358  5306 net.cpp:150] Setting up conv5
I0107 03:31:58.286382  5306 net.cpp:157] Top shape: 50 256 13 13 (2163200)
I0107 03:31:58.286389  5306 net.cpp:165] Memory required for data: 327596400
I0107 03:31:58.286423  5306 layer_factory.hpp:77] Creating layer relu5
I0107 03:31:58.286438  5306 net.cpp:100] Creating Layer relu5
I0107 03:31:58.286447  5306 net.cpp:434] relu5 <- conv5
I0107 03:31:58.286456  5306 net.cpp:395] relu5 -> conv5 (in-place)
I0107 03:31:58.286470  5306 net.cpp:150] Setting up relu5
I0107 03:31:58.286479  5306 net.cpp:157] Top shape: 50 256 13 13 (2163200)
I0107 03:31:58.286504  5306 net.cpp:165] Memory required for data: 336249200
I0107 03:31:58.286514  5306 layer_factory.hpp:77] Creating layer pool5
I0107 03:31:58.286527  5306 net.cpp:100] Creating Layer pool5
I0107 03:31:58.286535  5306 net.cpp:434] pool5 <- conv5
I0107 03:31:58.286545  5306 net.cpp:408] pool5 -> pool5
I0107 03:31:58.286561  5306 net.cpp:150] Setting up pool5
I0107 03:31:58.286572  5306 net.cpp:157] Top shape: 50 256 6 6 (460800)
I0107 03:31:58.286579  5306 net.cpp:165] Memory required for data: 338092400
I0107 03:31:58.286586  5306 layer_factory.hpp:77] Creating layer fc6
I0107 03:31:58.286600  5306 net.cpp:100] Creating Layer fc6
I0107 03:31:58.286610  5306 net.cpp:434] fc6 <- pool5
I0107 03:31:58.286622  5306 net.cpp:408] fc6 -> fc6
I0107 03:31:59.384956  5306 net.cpp:150] Setting up fc6
I0107 03:31:59.384986  5306 net.cpp:157] Top shape: 50 4096 (204800)
I0107 03:31:59.384992  5306 net.cpp:165] Memory required for data: 338911600
I0107 03:31:59.385015  5306 layer_factory.hpp:77] Creating layer relu6
I0107 03:31:59.385030  5306 net.cpp:100] Creating Layer relu6
I0107 03:31:59.385038  5306 net.cpp:434] relu6 <- fc6
I0107 03:31:59.385048  5306 net.cpp:395] relu6 -> fc6 (in-place)
I0107 03:31:59.385061  5306 net.cpp:150] Setting up relu6
I0107 03:31:59.385069  5306 net.cpp:157] Top shape: 50 4096 (204800)
I0107 03:31:59.385076  5306 net.cpp:165] Memory required for data: 339730800
I0107 03:31:59.385082  5306 layer_factory.hpp:77] Creating layer drop6
I0107 03:31:59.385092  5306 net.cpp:100] Creating Layer drop6
I0107 03:31:59.385098  5306 net.cpp:434] drop6 <- fc6
I0107 03:31:59.385107  5306 net.cpp:395] drop6 -> fc6 (in-place)
I0107 03:31:59.385118  5306 net.cpp:150] Setting up drop6
I0107 03:31:59.385125  5306 net.cpp:157] Top shape: 50 4096 (204800)
I0107 03:31:59.385131  5306 net.cpp:165] Memory required for data: 340550000
I0107 03:31:59.385138  5306 layer_factory.hpp:77] Creating layer fc7
I0107 03:31:59.385149  5306 net.cpp:100] Creating Layer fc7
I0107 03:31:59.385154  5306 net.cpp:434] fc7 <- fc6
I0107 03:31:59.385169  5306 net.cpp:408] fc7 -> fc7
I0107 03:31:59.879518  5306 net.cpp:150] Setting up fc7
I0107 03:31:59.879546  5306 net.cpp:157] Top shape: 50 4096 (204800)
I0107 03:31:59.879552  5306 net.cpp:165] Memory required for data: 341369200
I0107 03:31:59.879576  5306 layer_factory.hpp:77] Creating layer relu7
I0107 03:31:59.879590  5306 net.cpp:100] Creating Layer relu7
I0107 03:31:59.879601  5306 net.cpp:434] relu7 <- fc7
I0107 03:31:59.879609  5306 net.cpp:395] relu7 -> fc7 (in-place)
I0107 03:31:59.879622  5306 net.cpp:150] Setting up relu7
I0107 03:31:59.879629  5306 net.cpp:157] Top shape: 50 4096 (204800)
I0107 03:31:59.879634  5306 net.cpp:165] Memory required for data: 342188400
I0107 03:31:59.879650  5306 layer_factory.hpp:77] Creating layer drop7
I0107 03:31:59.879668  5306 net.cpp:100] Creating Layer drop7
I0107 03:31:59.879674  5306 net.cpp:434] drop7 <- fc7
I0107 03:31:59.879683  5306 net.cpp:395] drop7 -> fc7 (in-place)
I0107 03:31:59.879693  5306 net.cpp:150] Setting up drop7
I0107 03:31:59.879701  5306 net.cpp:157] Top shape: 50 4096 (204800)
I0107 03:31:59.879708  5306 net.cpp:165] Memory required for data: 343007600
I0107 03:31:59.879714  5306 layer_factory.hpp:77] Creating layer fc8
I0107 03:31:59.879726  5306 net.cpp:100] Creating Layer fc8
I0107 03:31:59.879732  5306 net.cpp:434] fc8 <- fc7
I0107 03:31:59.879741  5306 net.cpp:408] fc8 -> fc8
I0107 03:31:59.880023  5306 net.cpp:150] Setting up fc8
I0107 03:31:59.880033  5306 net.cpp:157] Top shape: 50 2 (100)
I0107 03:31:59.880038  5306 net.cpp:165] Memory required for data: 343008000
I0107 03:31:59.880058  5306 layer_factory.hpp:77] Creating layer fc8_fc8_0_split
I0107 03:31:59.880069  5306 net.cpp:100] Creating Layer fc8_fc8_0_split
I0107 03:31:59.880075  5306 net.cpp:434] fc8_fc8_0_split <- fc8
I0107 03:31:59.880084  5306 net.cpp:408] fc8_fc8_0_split -> fc8_fc8_0_split_0
I0107 03:31:59.880096  5306 net.cpp:408] fc8_fc8_0_split -> fc8_fc8_0_split_1
I0107 03:31:59.880110  5306 net.cpp:150] Setting up fc8_fc8_0_split
I0107 03:31:59.880132  5306 net.cpp:157] Top shape: 50 2 (100)
I0107 03:31:59.880151  5306 net.cpp:157] Top shape: 50 2 (100)
I0107 03:31:59.880165  5306 net.cpp:165] Memory required for data: 343008800
I0107 03:31:59.880172  5306 layer_factory.hpp:77] Creating layer accuracy
I0107 03:31:59.880185  5306 net.cpp:100] Creating Layer accuracy
I0107 03:31:59.880195  5306 net.cpp:434] accuracy <- fc8_fc8_0_split_0
I0107 03:31:59.880203  5306 net.cpp:434] accuracy <- label_data_1_split_0
I0107 03:31:59.880215  5306 net.cpp:408] accuracy -> accuracy
I0107 03:31:59.880230  5306 net.cpp:150] Setting up accuracy
I0107 03:31:59.880240  5306 net.cpp:157] Top shape: (1)
I0107 03:31:59.880246  5306 net.cpp:165] Memory required for data: 343008804
I0107 03:31:59.880252  5306 layer_factory.hpp:77] Creating layer loss
I0107 03:31:59.880262  5306 net.cpp:100] Creating Layer loss
I0107 03:31:59.880269  5306 net.cpp:434] loss <- fc8_fc8_0_split_1
I0107 03:31:59.880276  5306 net.cpp:434] loss <- label_data_1_split_1
I0107 03:31:59.880292  5306 net.cpp:408] loss -> loss
I0107 03:31:59.880306  5306 layer_factory.hpp:77] Creating layer loss
I0107 03:31:59.880327  5306 net.cpp:150] Setting up loss
I0107 03:31:59.880337  5306 net.cpp:157] Top shape: (1)
I0107 03:31:59.880343  5306 net.cpp:160]     with loss weight 1
I0107 03:31:59.880362  5306 net.cpp:165] Memory required for data: 343008808
I0107 03:31:59.880368  5306 net.cpp:226] loss needs backward computation.
I0107 03:31:59.880376  5306 net.cpp:228] accuracy does not need backward computation.
I0107 03:31:59.880383  5306 net.cpp:226] fc8_fc8_0_split needs backward computation.
I0107 03:31:59.880389  5306 net.cpp:226] fc8 needs backward computation.
I0107 03:31:59.880395  5306 net.cpp:226] drop7 needs backward computation.
I0107 03:31:59.880400  5306 net.cpp:226] relu7 needs backward computation.
I0107 03:31:59.880406  5306 net.cpp:226] fc7 needs backward computation.
I0107 03:31:59.880412  5306 net.cpp:226] drop6 needs backward computation.
I0107 03:31:59.880419  5306 net.cpp:226] relu6 needs backward computation.
I0107 03:31:59.880424  5306 net.cpp:226] fc6 needs backward computation.
I0107 03:31:59.880430  5306 net.cpp:226] pool5 needs backward computation.
I0107 03:31:59.880436  5306 net.cpp:226] relu5 needs backward computation.
I0107 03:31:59.880442  5306 net.cpp:226] conv5 needs backward computation.
I0107 03:31:59.880448  5306 net.cpp:226] relu4 needs backward computation.
I0107 03:31:59.880455  5306 net.cpp:226] conv4 needs backward computation.
I0107 03:31:59.880460  5306 net.cpp:226] relu3 needs backward computation.
I0107 03:31:59.880466  5306 net.cpp:226] conv3 needs backward computation.
I0107 03:31:59.880473  5306 net.cpp:226] norm2 needs backward computation.
I0107 03:31:59.880480  5306 net.cpp:226] pool2 needs backward computation.
I0107 03:31:59.880486  5306 net.cpp:226] relu2 needs backward computation.
I0107 03:31:59.880491  5306 net.cpp:226] conv2 needs backward computation.
I0107 03:31:59.880498  5306 net.cpp:226] norm1 needs backward computation.
I0107 03:31:59.880504  5306 net.cpp:226] pool1 needs backward computation.
I0107 03:31:59.880511  5306 net.cpp:226] relu1 needs backward computation.
I0107 03:31:59.880517  5306 net.cpp:226] conv1 needs backward computation.
I0107 03:31:59.880523  5306 net.cpp:228] label_data_1_split does not need backward computation.
I0107 03:31:59.880530  5306 net.cpp:228] data does not need backward computation.
I0107 03:31:59.880537  5306 net.cpp:270] This network produces output accuracy
I0107 03:31:59.880543  5306 net.cpp:270] This network produces output loss
I0107 03:31:59.880573  5306 net.cpp:283] Network initialization done.
I0107 03:31:59.880687  5306 solver.cpp:60] Solver scaffolding done.
I0107 03:31:59.880733  5306 caffe.cpp:251] Starting Optimization
I0107 03:31:59.880740  5306 solver.cpp:279] Solving CaffeNet
I0107 03:31:59.880746  5306 solver.cpp:280] Learning Rate Policy: step
I0107 03:31:59.999256  5306 solver.cpp:337] Iteration 0, Testing net (#0)
